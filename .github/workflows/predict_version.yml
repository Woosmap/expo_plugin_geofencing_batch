name: PR Checker
on:
  pull_request:
    branches:
      - 'main'
    types: [labeled, opened,  synchronize]
  workflow_dispatch:


permissions:
  contents: write
  pull-requests: write
  checks: write

jobs:
  Versioning:
    runs-on: ubuntu-latest
    if: |
      contains(toJson(github.event.pull_request.labels.*.name), 'Major :star2:') ||
      contains(toJson(github.event.pull_request.labels.*.name), 'Minor :sparkles:') ||
      contains(toJson(github.event.pull_request.labels.*.name), 'Patch :bug:') ||
      contains(toJson(github.event.pull_request.labels.*.name), 'Skip Version')

    steps:
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        registry-url: https://registry.npmjs.org/

    - name: Checkout base branch
      uses: actions/checkout@v4
      with:
        ref: ${{ github.base_ref }}
        path: main

    - name: Get base version
      run: |
        cd main
        version=$(jq -r '.version' package.json)
        echo "PLUGIN_VERSION=$version" >> $GITHUB_ENV
        echo "Base version: $version"

    - name: Bump Patch version
      if: contains(toJson(github.event.pull_request.labels.*.name), 'Patch :bug:')
      run: |
        cd main
        npm version patch --git-tag-version false
        echo "PLUGIN_VERSION=$(jq -r '.version' package.json)" >> $GITHUB_ENV

    - name: Bump Minor version
      if: contains(toJson(github.event.pull_request.labels.*.name), 'Minor :sparkles:')
      run: |
        cd main
        npm version minor --git-tag-version false
        echo "PLUGIN_VERSION=$(jq -r '.version' package.json)" >> $GITHUB_ENV

    - name: Bump Major version
      if: contains(toJson(github.event.pull_request.labels.*.name), 'Major :star2:')
      run: |
        cd main
        npm version major --git-tag-version false
        echo "PLUGIN_VERSION=$(jq -r '.version' package.json)" >> $GITHUB_ENV

    - name: Save changelog from base
      run: |
        cp main/CHANGELOG.md ../CHANGELOG.md
        rm -rf main

    - name: Checkout PR source branch
      uses: actions/checkout@v3
      with:
        fetch-depth: ${{ github.event_name == 'pull_request' && 2 || 0 }}
        
    - name: Check whatsnew.md update
      id: whatsnew
      run: |
        echo "Changed files: ${{ steps.changed-files.outputs.changed_files }}"
        if ${{ github.event_name == 'pull_request' }}; then
              files=$(git diff --name-only -r HEAD^1 HEAD | xargs)
          else
              files=$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | xargs)
          fi
        echo "Changed files: $files"
        if echo "$files" | grep -q "whatsnew.md"; then
          echo "passed=true" >> $GITHUB_OUTPUT
        else
          echo "passed=false" >> $GITHUB_OUTPUT
        fi

    - name: Fail if whatsnew.md not updated
      if: ${{ steps.whatsnew.outputs.passed == 'false' }}
      run: |
        echo "::error::You missed updating whatsnew.md with the latest changes."
        exit 1

    - name: Refetch PR source branch
      uses: actions/checkout@v3
      with:
        ref: "${{ github.head_ref || github.ref_name }}"

    - name: Update version in package.json
      run: |
        sed -i "3 s/.*/\t\"version\": \"${PLUGIN_VERSION}\",/" package.json

    - name: Update CHANGELOG.md
      run: |
        touch update.md
        echo "## $PLUGIN_VERSION" > update.md
        cat whatsnew.md >> update.md
        echo "" >> update.md
        cat ../CHANGELOG.md >> update.md
        mv update.md CHANGELOG.md

    - name: Check if branch is dirty
      id: branchstatus
      run: |
        if [[ -n $(git status --porcelain) ]]; then
          echo "update=true" >> "$GITHUB_OUTPUT"
        else
          echo "update=false" >> "$GITHUB_OUTPUT"
        fi

    - name: Commit and push changes
      if: ${{ steps.branchstatus.outputs.update == 'true' }}
      uses: devops-infra/action-commit-push@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        commit_message: "Updated ${{ env.PLUGIN_VERSION }}"
        commit_prefix: "[AUTO]"
        force: false
          
  react_ios:
    needs: Versioning
    runs-on: macos-14
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
         node-version: 18.x
         registry-url: https://registry.npmjs.org/
         
      - name: set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '17'

      - name: Cache NPM dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-woosmap-npm-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-woosmap-npm-cache-
            
      - name: Cache POD dependencies
        uses: actions/cache@v4
        with:
          path: Pods
          key: ${{ runner.os }}-woosmap-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-woosmap-pods-

      - name: Build it
        run: |
          npm install
          export USE_FRAMEWORKS=dynamic
          export NO_FLIPPER=1
          cd example && npm install
          npx pod-install
          
      - name: Run test
        run: |
          npm run build
          
